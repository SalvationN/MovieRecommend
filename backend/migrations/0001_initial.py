# Generated by Django 3.0.4 on 2020-05-10 16:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='movie',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('rate', models.FloatField(default=0, verbose_name='平均评分')),
                ('rate_num', models.IntegerField(default=0, verbose_name='评分人数')),
                ('comment_num', models.IntegerField(default=0, verbose_name='评论人数')),
                ('type', models.CharField(max_length=255, verbose_name='类型')),
                ('director', models.TextField(max_length=65535, verbose_name='导演')),
                ('writer', models.TextField(max_length=65535, verbose_name='编剧')),
                ('actor', models.TextField(max_length=65535, verbose_name='演员')),
                ('area', models.CharField(max_length=255, verbose_name='地区')),
                ('language', models.CharField(max_length=255, verbose_name='语言')),
                ('date', models.DateField(verbose_name='日期')),
                ('time', models.IntegerField(default=0, verbose_name='时长')),
                ('intro', models.TextField(max_length=65535, verbose_name='简介')),
            ],
            options={
                'verbose_name': '电影',
                'db_table': 'movie',
            },
        ),
        migrations.CreateModel(
            name='recommendion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('mv1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_mv1', to='backend.movie', verbose_name='推荐1')),
                ('mv10', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_mv10', to='backend.movie', verbose_name='推荐10')),
                ('mv11', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_mv11', to='backend.movie', verbose_name='推荐11')),
                ('mv12', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_mv12', to='backend.movie', verbose_name='推荐12')),
                ('mv2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_mv2', to='backend.movie', verbose_name='推荐2')),
                ('mv3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_mv3', to='backend.movie', verbose_name='推荐3')),
                ('mv4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_mv4', to='backend.movie', verbose_name='推荐4')),
                ('mv5', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_mv5', to='backend.movie', verbose_name='推荐5')),
                ('mv6', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_mv6', to='backend.movie', verbose_name='推荐6')),
                ('mv7', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_mv7', to='backend.movie', verbose_name='推荐7')),
                ('mv8', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_mv8', to='backend.movie', verbose_name='推荐8')),
                ('mv9', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_mv9', to='backend.movie', verbose_name='推荐9')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommend_user', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '推荐列表',
                'db_table': 'recommendation',
            },
        ),
        migrations.CreateModel(
            name='rate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('time', models.DateTimeField(verbose_name='评分时间')),
                ('rate', models.IntegerField(default=0, verbose_name='评分')),
                ('movie_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rate_movie', to='backend.movie', verbose_name='电影')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rate_user', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '评分',
                'db_table': 'rate',
            },
        ),
        migrations.CreateModel(
            name='comment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('time', models.DateTimeField(verbose_name='评论时间')),
                ('rate', models.IntegerField(default=0, verbose_name='评分')),
                ('comment', models.TextField(max_length=65535, verbose_name='评论')),
                ('favor_num', models.IntegerField(default=0, verbose_name='点赞人数')),
                ('oppo_num', models.IntegerField(default=0, verbose_name='点踩人数')),
                ('movie_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_movie', to='backend.movie', verbose_name='电影')),
                ('uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_user', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '评论',
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='blog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='编号')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('body', models.TextField(verbose_name='内容')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作者')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.movie', verbose_name='电影')),
            ],
            options={
                'verbose_name': '影评',
                'db_table': 'blog',
            },
        ),
    ]
